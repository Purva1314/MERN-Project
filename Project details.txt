
# Education Platform - MERN Stack

## Overview
This project is an online education platform built using the MERN stack (MongoDB, Express.js, React.js, Node.js). 
The platform provides users with access to a variety of courses, enabling them to learn at their own pace. 
It includes user and admin modules with features like course management, video lessons, and progress tracking.

## Features
- **User Registration and Login**: Secure authentication using JWT tokens.
- **Course Catalog**: Browse, search, and filter courses based on categories, difficulty, and ratings.
- **Admin Dashboard**: Manage courses, users, and course subscriptions.
- **Video Lessons**: Stream lessons as part of course content.
- **Progress Tracking**: Users can monitor their progress in enrolled courses.
- **Search and Filter**: Search courses based on specific criteria.

## Project Structure
- **Frontend**: Built using React.js for dynamic user interfaces.
- **Backend**: Node.js and Express.js for APIs and server-side logic.
- **Database**: MongoDB for storing user and course data.
- **Authentication**: User authentication and authorization using JWT.

## Installation and Setup
1. Clone the repository from GitHub:
   ```bash
   git clone <repository_url>
   ```

2. Navigate to the project directory:
   ```bash
   cd education-platform-mern
   ```

3. Install dependencies for both frontend and backend:
   ```bash
   cd frontend
   npm install
   cd ../backend
   npm install
   ```

4. Create a `.env` file in the backend directory with the following details:
   ```plaintext
   MONGO_URI=<Your MongoDB Connection String>
   JWT_SECRET=<Your Secret Key>
   PORT=5000
   ```

5. Start the development servers:
   - Backend: Run `npm start` in the `backend` directory.
   - Frontend: Run `npm start` in the `frontend` directory.

6. Access the application at `http://localhost:3000`.

## API Endpoints
Key endpoints for the platform:
- **User Management**:
  - `POST /api/users/register`: Register a new user.
  - `POST /api/users/login`: Log in and retrieve a JWT token.
- **Course Management**:
  - `GET /api/courses`: Get a list of courses.
  - `GET /api/courses/:id`: Get details of a specific course.
  - `POST /api/courses/enroll`: Enroll in a course.

## Technologies Used
- **Frontend**: React.js, Bootstrap for styling.
- **Backend**: Node.js, Express.js.
- **Database**: MongoDB with Mongoose ORM.
- **Authentication**: JSON Web Tokens (JWT).

## Contributing
Contributions are welcome! Please fork the repository and submit a pull request for review.

## License
This project is licensed under the MIT License. See the `LICENSE` file for details.
